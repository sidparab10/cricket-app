{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/base.ts","webpack:///src/app/components/footer/footer.component.ts","webpack:///src/app/components/footer/footer.component.html","webpack:///src/app/components/header/header.component.model.ts","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/pages/dashboard/dashboard.component.model.ts","webpack:///src/app/components/pages/dashboard/dashboard.component.ts","webpack:///src/app/components/pages/dashboard/dashboard.component.html","webpack:///src/app/components/pages/login/login.component.model.ts","webpack:///src/app/components/pages/login/login.component.ts","webpack:///src/app/components/pages/login/login.component.html","webpack:///src/app/components/sidebar/buttons/create-match/create-match.component.ts","webpack:///src/app/components/sidebar/buttons/create-match/create-match.component.html","webpack:///src/app/components/sidebar/buttons/create-team/create-team.component.model.ts","webpack:///src/app/components/sidebar/buttons/create-team/create-team.component.ts","webpack:///src/app/components/sidebar/buttons/create-team/create-team.component.html","webpack:///src/app/components/sidebar/sidebar.component.model.ts","webpack:///src/app/components/sidebar/sidebar.component.ts","webpack:///src/app/components/sidebar/sidebar.component.html","webpack:///src/app/material/material.module.ts","webpack:///src/app/services/configuration.service.ts","webpack:///src/app/services/local-service.service.ts","webpack:///src/app/services/snackbar.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","children","component","AppRoutingModule","forRoot","imports","AppComponent","locService","configService","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","BaseComp","i18n","getLocalText","key","FooterComponent","NavBtnClass","HeaderComponentModel","navBtns","HeaderComponent","router","headerConfig","getComponentConfig","navigateByUrl","HomeComponent","NavBtnsModel","StatisticsModel","DashboardModel","statistics","url","CalByDstrict","DashboardComponent","http","dashboardConfig","FormInputModel","LoginComponentModel","formInputs","autocomplete","placeholder","LoginComponent","formType","loginConfig","toggleForm","CreateMatchComponent","createTeamConfig","idx","checkboxStatus","CreatTeamModel","CreateTeamComponent","snackService","setTeamData","name","score","showNotification","addTeam","SideBtnModel","SidebarModel","sideBtns","SidebarComponent","route","activateRoute","sidebarConfig","showSidebar","label","split","map","word","charAt","toUpperCase","join","type","onSidebarBtn","MaterialModule","ConfigurationService","configData","teamData","teamDataSub","subscribe","data","push","console","log","compName","next","providedIn","LocalService","init","lng","debug","resources","en","translation","err","t","undefined","SnacbarService","_snackBar","msg","action","open","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './components/pages/dashboard/dashboard.component';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { CreateMatchComponent } from './components/sidebar/buttons/create-match/create-match.component';\nimport { CreateTeamComponent } from './components/sidebar/buttons/create-team/create-team.component';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: 'home'\n  },\n  {\n    path: 'home',\n    children: [\n      {\n        path: '',\n        component: DashboardComponent\n      },\n      {\n        path: 'create-team',\n        component: CreateTeamComponent\n      },\n      {\n        path: 'create-match',\n        component: CreateMatchComponent\n      }\n    ]\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport { BaseComp } from './base';\nimport { ConfigurationService } from './services/configuration.service';\nimport { LocalService } from './services/local-service.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent extends BaseComp {\n  constructor(public locService: LocalService, private configService: ConfigurationService) {\n    super(locService);\n  }\n}\n","<app-home></app-home>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { DashboardComponent } from './components/pages/dashboard/dashboard.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { LoginComponent } from './components/pages/login/login.component';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CreateTeamComponent } from './components/sidebar/buttons/create-team/create-team.component';\nimport { CreateMatchComponent } from './components/sidebar/buttons/create-match/create-match.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    HeaderComponent,\n    FooterComponent,\n    DashboardComponent,\n    LoginComponent,\n    SidebarComponent,\n    CreateTeamComponent,\n    CreateMatchComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ConfigurationService } from \"./services/configuration.service\";\r\nimport { LocalService } from \"./services/local-service.service\";\r\n\r\nexport class BaseComp {\r\n  i18n: any;\r\n  constructor(\r\n    public locService: LocalService\r\n  ) {\r\n    this.i18n = this.locService.getLocalText;\r\n  }\r\n\r\n  public getFormValidationErr(key) {\r\n    return this.i18n(key) + this.i18n('common.form-validation.postfix');\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","class NavBtnClass {\r\n    type: string;\r\n    label: string;\r\n    urlPath: string;\r\n    icon?: string;\r\n}\r\n\r\nexport class HeaderComponentModel {\r\n    navBtns: NavBtnClass[];\r\n    constructor() {\r\n        this.navBtns = [];\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BaseComp } from 'src/app/base';\nimport { ConfigurationService } from 'src/app/services/configuration.service';\nimport { LocalService } from 'src/app/services/local-service.service';\nimport { HeaderComponentModel } from './header.component.model';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent extends BaseComp implements OnInit {\n  public headerConfig = new HeaderComponentModel();\n\n  constructor(\n    public locService: LocalService,\n    private configService: ConfigurationService,\n    private router: Router\n  ) {\n    super(locService);\n  }\n\n  ngOnInit(): void {\n    this.headerConfig = this.configService.getComponentConfig(\"header\");\n  }\n\n  onNavBtnClick(path: string) {\n    this.router.navigateByUrl(path);\n  }\n}\n","<div class=\"header-container\">\n  <div class=\"header-title-wrapper container-fluid row\">\n    <div class=\"header-title-container col-8 left-side\">\n      <!-- <div class=\"logo-box\"></div> -->\n      <h1>{{i18n(\"title\")}}</h1>\n    </div>\n    <div class=\"header-buttons-container col-4 right-side\">\n      <button *ngFor=\"let btn of headerConfig.navBtns\"\n      (click)=\"onNavBtnClick(btn.urlPath)\" mat-button class=\"header-button\">\n        {{btn.label}}\n        <ng-container *ngIf=\"btn.icon && btn.icon !== 'none'\">\n          <mat-icon>{{btn.icon}}</mat-icon>\n        </ng-container>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n","<div class=\"app-body-container\">\n  <app-header class=\"header-wrapper\">\n  </app-header>\n  <div class=\"body-container\">\n    <app-sidebar></app-sidebar>\n    <div class=\"body-wrapper\">\n      <router-outlet></router-outlet>\n    </div>\n  </div>\n</div>\n","class NavBtnsModel {\r\n    label: string;\r\n}\r\n\r\nclass StatisticsModel {\r\n    type: string;\r\n    label: string;\r\n}\r\n\r\nexport class DashboardModel {\r\n    navBtns: NavBtnsModel[];\r\n    statistics: StatisticsModel[];\r\n\r\n    constructor() {\r\n        this.navBtns = [];\r\n        this.statistics = [];\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { ConfigurationService } from 'src/app/services/configuration.service';\nimport { DashboardModel } from './dashboard.component.model';\n\nconst url = \"\";\nconst CalByDstrict = \"\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  dashboardConfig = new DashboardModel();\n\n  constructor(\n    private http: HttpClient,\n    private configService: ConfigurationService\n  ) { }\n\n  ngOnInit(): void {\n    this.dashboardConfig = this.configService.getComponentConfig(\"dashboard\");\n  }\n\n}","<div class=\"dashboard-container\">\n  <div class=\"banner-container\">\n    <div class=\"banner-image\">\n      <div class=\"navbar-container\">\n        <button *ngFor=\"let btn of dashboardConfig.navBtns\" mat-stroked-button\n          class=\"header-button\">\n          {{btn.label}}\n          <ng-container *ngIf=\"btn.icon && btn.icon !== 'none'\">\n            <mat-icon>{{btn.icon}}</mat-icon>\n          </ng-container>\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"statistics-container\">\n    <div *ngFor=\"let stat of dashboardConfig.statistics\" \n      class=\"stat-box {{stat.type}}-container\">\n      <div class=\"stat-label\">\n        <div class=\"icon\">\n          <mat-icon>{{stat.icon}}</mat-icon>\n        </div>\n        <div class=\"label\">\n          {{stat.label}}\n        </div>\n      </div>\n      <div class=\"stat-value\">{{stat.value}}</div>\n    </div>\n  </div>\n</div>\n","class FormInputModel {\r\n    formType: string;\r\n    type: string;\r\n    inputType: string;\r\n    label: string;\r\n    placeholder: string;\r\n    clsName: string;\r\n    autocomplete: string;\r\n    inputs: FormInputModel[];\r\n}\r\n\r\nexport class LoginComponentModel {\r\n    formInputs: FormInputModel[];\r\n    constructor() {\r\n        this.formInputs = [];\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { BaseComp } from 'src/app/base';\nimport { ConfigurationService } from 'src/app/services/configuration.service';\nimport { LocalService } from 'src/app/services/local-service.service';\nimport { LoginComponentModel } from './login.component.model';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent extends BaseComp implements OnInit {\n  formType: string = 'login';\n  public loginConfig = new LoginComponentModel();\n\n  constructor(\n    public locService: LocalService,\n    private configService: ConfigurationService,\n  ) {\n    super(locService);\n  }\n\n  ngOnInit(): void {\n    this.loginConfig = this.configService.getComponentConfig(\"login\");\n  }\n\n  isLoginForm() {\n    return this.formType === 'login';\n  }\n\n  toggleForm() {\n    this.formType = this.formType === 'register' ? 'login' : 'register';\n  }\n}\n","<div class=\"login-container container-fluid\">\n  <div class=\"login-register-form col-4\">\n    <div class=\"form-container\">\n      <fieldset>\n        <legend>\n          <label>{{isLoginForm() ? i18n(\"loginRegister.formTitle.login\") : i18n(\"loginRegister.formTitle.register\")}}</label>\n        </legend>\n\n        <ng-container *ngFor=\"let input of loginConfig.formInputs\">\n          <ng-container *ngIf=\"input.type === 'input'\">\n            <mat-form-field *ngIf=\"input.formType === 'both' || input.formType === formType\">\n              <mat-label>{{input.label}}</mat-label>\n              <input matInput autocomplete=\"{{input.autocomplete}}\" \n              type=\"{{input.inputType}}\"\n              placeholder=\"{{input.placeholder}}\">\n            </mat-form-field>\n          </ng-container>\n\n          <ng-container *ngIf=\"input.type === 'multi'\">\n            <div class=\"input-row\">\n              <ng-container *ngFor=\"let subInput of input.inputs\">\n                <mat-form-field *ngIf=\"subInput.formType === 'both' || subInput.formType === formType\">\n                <mat-label>{{subInput.label}}</mat-label>\n                <input matInput autocomplete=\"{{subInput.autocomplete}}\" \n                type=\"{{subInput.inputType}}\"\n                placeholder=\"{{subInput.placeholder}}\">\n              </mat-form-field>\n              </ng-container>\n            </div>\n          </ng-container>\n        </ng-container>\n        \n        <div class=\"submit-btn-container\">\n          <button color=\"primary\" mat-stroked-button>\n            {{isLoginForm() ? i18n(\"loginRegister.formBtns.login\") : i18n(\"loginRegister.formBtns.register\")}}\n          </button>\n          <div class=\"forget-password-container\" *ngIf=\"isLoginForm()\">\n            <a>{{i18n('loginRegister.formBtns.forgetBtn')}}</a>\n          </div>\n        </div>\n      </fieldset>\n    </div>\n    <div class=\"form-route-link\">\n      {{isLoginForm() ? \n            i18n('loginRegister.formRouting.registerForm') :\n            i18n('loginRegister.formRouting.loginForm')}}\n      <a (click)=\"toggleForm()\">\n        {{isLoginForm() ? \n            i18n('loginRegister.formRouting.registerFormLink') :\n            i18n('loginRegister.formRouting.loginFormLink')}}\n      </a>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BaseComp } from 'src/app/base';\nimport { ConfigurationService } from 'src/app/services/configuration.service';\nimport { LocalService } from 'src/app/services/local-service.service';\nimport { CreatMatchModel, FormInputModel } from './create-team.component.model';\n\n@Component({\n  selector: 'app-create-match',\n  templateUrl: './create-match.component.html',\n  styleUrls: ['./create-match.component.scss']\n})\nexport class CreateMatchComponent extends BaseComp implements OnInit {\n\n  createTeamConfig: any;\n  formInputs: any;\n\n  constructor(\n    public locService: LocalService,\n    private configService: ConfigurationService,\n  ) {\n    super(locService);\n  }\n\n  ngOnInit(): void {\n    this.createTeamConfig = this.configService.getComponentConfig(\"create-match\");\n    this.formInputs = this.createTeamConfig.formInputs;\n  }\n\n  changeCheckboxStatus(idx) {\n    this.formInputs[idx].checkboxStatus = !this.formInputs[idx].checkboxStatus;\n  }\n}\n","<div class=\"create-team-container container-fluid\">\n  <div class=\"create-team-form col-8\">\n    <div class=\"form-container\">\n      <fieldset>\n        <legend>\n          <label>{{i18n(\"createMatch.title\")}}</label>\n        </legend>\n\n        <div class=\"team-sections\">\n          <div class=\"section\" *ngFor=\"let section of formInputs.sections\">\n            <div class=\"section-title\">{{section.label}}</div>\n            <hr>\n            <div class=\"secction-inputs\">\n              <mat-form-field appearance=\"fill\">\n                <mat-label>{{section.inputs.label}}</mat-label>\n                <mat-select>\n                  <mat-option *ngFor=\"let option of section.inputs.optionList\" [value]=\"option\">\n                    {{option}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"submit-btn-container\">\n          <button color=\"primary\" mat-stroked-button>\n            {{i18n(\"createTeam.createBtn\")}}\n          </button>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n","export class FormInputModel {\r\n    label: string;\r\n    type: string;\r\n    layoutType: string;\r\n    placeholder?: string;\r\n    inputType: string;\r\n    autocomplete?: string;\r\n    inputs: FormInputModel[];\r\n    // for adding image file type - accept = 'image/*' and inputType = 'file'\r\n    accept?: string;\r\n    addCheckbox?: boolean;\r\n    checkboxLabel?: string;\r\n    checkboxStatus?: boolean;\r\n}\r\n\r\nexport class CreatTeamModel {\r\n    formInputs: FormInputModel[]\r\n}","import { Component, OnInit } from '@angular/core';\nimport { BaseComp } from 'src/app/base';\nimport { ConfigurationService } from 'src/app/services/configuration.service';\nimport { LocalService } from 'src/app/services/local-service.service';\nimport { SnacbarService } from 'src/app/services/snackbar.service';\nimport { CreatTeamModel, FormInputModel } from './create-team.component.model';\n\n@Component({\n  selector: 'app-create-team',\n  templateUrl: './create-team.component.html',\n  styleUrls: ['./create-team.component.scss']\n})\nexport class CreateTeamComponent extends BaseComp implements OnInit {\n\n  createTeamConfig = new CreatTeamModel();\n  formInputs: FormInputModel[];\n\n  constructor(\n    public locService: LocalService,\n    private configService: ConfigurationService,\n    private snackService: SnacbarService\n  ) {\n    super(locService);\n  }\n\n  ngOnInit(): void {\n    this.createTeamConfig = this.configService.getComponentConfig(\"create-team\");\n    this.formInputs = this.createTeamConfig.formInputs;\n  }\n\n  changeCheckboxStatus(idx) {\n    this.formInputs[idx].checkboxStatus = !this.formInputs[idx].checkboxStatus;\n  }\n\n  addTeam() {\n    this.configService.setTeamData({\n      name: \"asdak\",\n      score: 12\n    });\n    this.snackService.showNotification('team added')\n  }\n\n}\n","<div class=\"create-team-container container-fluid\">\n  <div class=\"create-team-form col-5\">\n    <div class=\"form-container\">\n      <fieldset>\n        <legend>\n          <label>{{i18n(\"createTeam.title\")}}</label>\n        </legend>\n\n        <ng-container *ngFor=\"let input of formInputs; let idx = index\">\n          <ng-container *ngIf=\"input.layoutType === 'input'\">\n            <div class=\"form-input\" [ngClass]=\"{'add-checkbox-input': input.addCheckbox}\">\n              <ng-container *ngIf=\"input.addCheckbox\">\n                <section class=\"add-checkbox-container\">\n                  <mat-checkbox (change)=\"changeCheckboxStatus(idx)\" class=\"add-checkbox\">{{input.checkboxLabel}}\n                  </mat-checkbox>\n                </section>\n              </ng-container>\n              <ng-container *ngIf=\"input.inputType === 'file'; else noFile\">\n                <label class=\"file-input-box\"\n                  [ngClass]=\"{'disabled-input': input.addCheckbox && !input.checkboxStatus}\">\n                  <mat-icon class=\"icon\">attach_file</mat-icon>\n                  <span class=\"label\">{{input.label}}</span>\n                  <input class=\"file-input\" type=\"file\" placeholder=\"{{input.placeholder}}\"\n                    [disabled]=\"input.addCheckbox && !input.checkboxStatus\">\n                </label>\n              </ng-container>\n              <ng-template #noFile>\n                <mat-form-field>\n                  <mat-label>{{input.label}}</mat-label>\n                  <input matInput autocomplete=\"{{input.autocomplete}}\" type=\"{{input.inputType}}\"\n                    placeholder=\"{{input.placeholder}}\">\n                </mat-form-field>\n              </ng-template>\n            </div>\n          </ng-container>\n          <ng-container *ngIf=\"input.layoutType === 'multi'\">\n            <div class=\"multi-form-input\">\n              <div class=\"input-row\">\n                <ng-container *ngFor=\"let subInput of input.inputs\">\n                  <mat-form-field>\n                    <mat-label>{{subInput.label}}</mat-label>\n                    <input matInput autocomplete=\"{{subInput.autocomplete}}\" type=\"{{subInput.inputType}}\"\n                      placeholder=\"{{subInput.placeholder}}\">\n                  </mat-form-field>\n                </ng-container>\n              </div>\n            </div>\n          </ng-container>\n        </ng-container>\n\n        <div class=\"submit-btn-container\">\n          <button (click)=\"addTeam()\" color=\"primary\" mat-stroked-button>\n            {{i18n(\"createTeam.createBtn\")}}\n          </button>\n        </div>\n      </fieldset>\n    </div>\n  </div>\n</div>\n","class SideBtnModel {\r\n    label: string;\r\n    type: string;\r\n    icon: string;\r\n}\r\n\r\nexport class SidebarModel {\r\n    sideBtns: SideBtnModel[];\r\n\r\n    constructor() {\r\n        this.sideBtns = [];\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ConfigurationService } from 'src/app/services/configuration.service';\nimport { SidebarModel } from './sidebar.component.model';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n  sidebarConfig = new SidebarModel();\n  showSidebar = false;\n\n  constructor(\n    private configService: ConfigurationService,\n    private route: Router,\n    private activateRoute: ActivatedRoute\n  ) { }\n\n  ngOnInit(): void {\n    this.sidebarConfig = this.configService.getComponentConfig(\"sidebar\");\n  }\n\n  onSidebarBtn() {\n    this.showSidebar = !this.showSidebar;\n  }\n\n  getShortLabel(label: string) {\n    return label.split(\" \").map((word)=>{\n      return word.charAt(0).toUpperCase();\n    }).join(\"\");\n  }\n\n  onSideBtnClick(type: string) {\n    switch(type) {\n      case 'create-team':\n      case 'create-match': {\n        this.route.navigateByUrl(`home/${type}`);\n        break;\n      }\n    }\n  }\n\n}\n","<div class=\"sidebar-container\" [ngClass]=\"{'hide-sidebar': !showSidebar}\">\n  <div class=\"sidebar-btn-container\">\n    <button class=\"sidebar-action-btn\" mat-icon-button (click)=\"onSidebarBtn()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n  </div>\n  <div class=\"siderbar-wrapper\" *ngIf=\"showSidebar\">\n    <div class=\"side-btn-wrapper\" *ngFor=\"let sideBtn of sidebarConfig.sideBtns\">\n      <button (click)=\"onSideBtnClick(sideBtn.type)\" class=\"side-btn {{sideBtn.type}}\">\n        <div class=\"icon\" *ngIf=\"!!sideBtn.icon\">\n          <mat-icon>{{sideBtn.icon}}</mat-icon>\n        </div>\n        <div class=\"label\">{{sideBtn.label}}</div>\n      </button>\n    </div>\n  </div>\n  <div class=\"min-siderbar-wrapper\" *ngIf=\"!showSidebar\">\n    <div class=\"side-btn-wrapper\" *ngFor=\"let sideBtn of sidebarConfig.sideBtns\">\n      <button (click)=\"onSideBtnClick(sideBtn.type)\" [matTooltip]=\"sideBtn.label\" matTooltipPosition=\"right\"\n        class=\"side-btn {{sideBtn.type}}\">\n        <mat-icon>{{sideBtn.icon}}</mat-icon>\n      </button>\n    </div>\n  </div>\n</div>\n<!-- <div class=\"disabled-overlay\" [ngClass]=\"{'hide-overlay': !showSidebar}\"></div> -->\n","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ],\r\n  imports: [\r\n    A11yModule,\r\n    ClipboardModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class MaterialModule {}\r\n\r\n\r\n/**  Copyright 2020 Google LLC. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport ConfigurationData from './../../assets/configuration.json';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConfigurationService {\n  private configData = ConfigurationData;\n  teamData = []\n  teamDataSub: Subject<any[]> = new Subject<any[]>();\n\n  constructor() {\n    this.teamDataSub.subscribe((data)=>{\n      this.teamData.push(data);\n      console.log(data);\n    })\n  }\n\n  getComponentConfig(compName: string) {\n    return this.configData?.[compName];\n  }\n\n  setTeamData(data) {\n    this.teamDataSub.next(data);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport i18next from 'i18next';\r\nimport localization from '../../assets/localization-en.json';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LocalService {\r\n  constructor() {\r\n    i18next.init(\r\n      {\r\n        lng: 'en',\r\n        debug: true,\r\n        resources: {\r\n          en: {\r\n            translation: localization,\r\n          },\r\n        },\r\n      },\r\n      function (err, t) {}\r\n    );\r\n  }\r\n\r\n  getLocalText(key?: string) {\r\n    return key !== undefined ? i18next.t(key) : '';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SnacbarService {\r\n  constructor(private _snackBar: MatSnackBar) { }\r\n\r\n  showNotification(msg: string, action?: string) {\r\n    this._snackBar.open(msg, action ? action : 'OK');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}